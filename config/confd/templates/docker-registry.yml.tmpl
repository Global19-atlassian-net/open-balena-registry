version: 0.1
log:
  level: {{if getenv "REGISTRY2_LOGLEVEL"}}{{getenv "REGISTRY2_LOGLEVEL"}}{{else}}warn{{end}}

http:
  addr: :80
  host: https://{{getenv "BALENA_REGISTRY2_HOST"}}
  {{if getenv "REGISTRY2_SECRETKEY"}}secret: {{getenv "REGISTRY2_SECRETKEY"}}{{end}}
  headers:
    X-Content-Type-Options: [nosniff]
auth:
  token:
    service: {{getenv "BALENA_REGISTRY2_HOST"}}
    realm: {{getenv "BALENA_TOKEN_AUTH_REALM"}}
    issuer: {{getenv "BALENA_TOKEN_AUTH_ISSUER"}}
    rootcertbundle: /certs/registry-tokenauth.crt
storage:
{{if eq (getenv "REGISTRY2_CACHE_ENABLED" "false") "true"}}
  cache:
    blobdescriptor: redis
{{end}}
{{if getenv "REGISTRY2_S3_BUCKET"}}
  s3:
    accesskey: {{getenv "REGISTRY2_S3_KEY"}}
    secretkey: {{getenv "REGISTRY2_S3_SECRET"}}
    region: {{getenv "COMMON_REGION"}}
{{if getenv "REGISTRY2_S3_REGION_ENDPOINT"}}
    regionendpoint: {{getenv "REGISTRY2_S3_REGION_ENDPOINT"}}
{{end}}
    bucket: {{getenv "REGISTRY2_S3_BUCKET"}}
    encrypt: false
    secure: true
    v4auth: true
    rootdirectory: {{getenv "REGISTRY2_STORAGEPATH"}}
{{else}}
  filesystem:
    rootdirectory: {{getenv "REGISTRY2_STORAGEPATH"}}
{{end}}

{{if getenv "REGISTRY2_S3_CLOUDFRONT_ENDPOINT"}}
middleware:
  storage:
    - name: cloudfront
      options:
        ipfilteredby: none
        baseurl: https://{{getenv "REGISTRY2_S3_CLOUDFRONT_ENDPOINT"}}/
        privatekey: /etc/ssl/private/cloudfront-pk.pem
        keypairid: {{getenv "REGISTRY2_S3_CLOUDFRONT_KEYPAIR_ID"}}
{{end}}

{{if eq (getenv "REGISTRY2_CACHE_ENABLED" "false") "true"}}
redis:
  addr: {{getenv "REGISTRY2_CACHE_ADDR" "127.0.0.1:6379"}}
  db: {{getenv "REGISTRY2_CACHE_DB" "0"}}
{{end}}
